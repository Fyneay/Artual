version: '3.4'
services:
  backend:
    build:
      context: backend
      dockerfile: Dockerfile
    image: php:8.3
    container_name: artual-backend
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./backend/php/local.ini:/usr/local/etc/php/conf.d/local.ini
      - ./backend/:/var/www
    depends_on:
      - postgres
      - redis
    networks:
      - artual-network
  webserver:
    image: nginx:1.27.4
    container_name: artual-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "81:81"
      - "443:443"
    volumes:
      - ./backend:/var/www
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
    networks:
      - artual-network
    depends_on:
      - backend
      - postgres
      - pgadmin
      - rabbitmq
  redis:
    image: redis:7.4.2
    container_name: artual-redis
    restart: always
    volumes:
      - ./redis/data:/opt/redis/data
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}" , "--bind", "0.0.0.0", "--maxclients", "10000", "--maxmemory", "6gb",  "--maxmemory-policy", "allkeys-lru"]
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - REDIS_HOST=${REDIS_HOST}
    ports:
      - "6379:6379"
    networks:
      - artual-network
  postgres:
    container_name: artual-postgres
    image: postgres:16.0
    restart: always
    environment:
        - POSTGRES_USER=${DB_USER}
        - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
        - ./postgres:/var/lib/postgresql/data
    ports:
        - "5432:5432"
    networks:
    - artual-network

  pgadmin:
    container_name: artual-pgadmin
    image: dpage/pgadmin4:7.8
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_LISTEN_PORT=5050
    expose:
      - '5050'
    restart: always
    networks:
      - artual-network
  rabbitmq:
    container_name: artual-rabbitmq
    image: rabbitmq:4.0.3-management
    volumes:
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
    restart: always
    expose:
      - '15672'
    networks:
      - artual-network
  openldap:
    image: osixia/openldap:1.5.0
    container_name: artual-openldap
    ports:
      - "389:389"
      - "636:636"
    environment:
      - LDAP_ORANISATION=ExampleCorp
      - LDAP_DOMAIN=example.com
      - LDAP_ADMIN_USERNAME=admin
      - LDAP_ADMIN_PASSWORD=admin
      - LDAP_CONFIG_PASSWORD=config
      - "LDAP_BASE_DN=dc=example,dc=com" 
      - LDAP_READONLY_USER=true
      - LDAP_TLS=false
      - LDAP_TLS_VERIFY_CLIENT=never
      - LDAP_REMOVE_CONFIG_AFTER_SETUP=false
    command: --copy-service
    volumes:
      - ./ldap/data:/var/lib/ldap
      - ./ldap/config:/etc/ldap/slapd.d
      - ./ldap/ldif:/tmp/ldif #для связи ldif файлов
    networks:
      - artual-network
    restart: always
  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: artual-phpldapadmin
    ports: 
      - "8080:80"
    environment: 
      - PHPLDAPADMIN_LDAP_HOSTS=openldap
      - PHPLDAPADMIN_HTTPS=false
      - PHPLDAPADMIN_TRUST_PROXY_SSL=true
      - PHPLDAPADMIN_LDAP_CLIENT_TLS=false
      - PHPLDAPADMIN_SERVER_PATH=/phpldapadmin 
    depends_on:
      - openldap
    networks:
      - artual-network
  checkerfile:
    build:
      context: ./services/checkerFile
      dockerfile: Dockerfile
    image: checkerfile:0.0.1
    container_name: artual-checkerFile
    restart: unless-stopped
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=15672
      - RABBITMQ_USER=admin
      - RABBITMQ_PASS=admin
    depends_on:
      - rabbitmq
    volumes:
      - ./services/checkerFile:/app
    ports:
      - "9090:9090"
    networks:
      - artual-network


# Docker Networks
networks:
  artual-network:
    driver: bridge